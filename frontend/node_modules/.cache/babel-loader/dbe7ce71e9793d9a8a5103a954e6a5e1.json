{"ast":null,"code":"var _jsxFileName = \"/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAppointments } from '../actions/fetchAppointments';\nimport Appointments from '../components/appointments/Appointments';\nimport { requestDate } from '../actions/requestDate';\n\nclass AppointmentContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAppointments();\n  }\n\n  componentDidUpdate() {\n    this.props.fetchAppointments();\n  }\n\n  render() {\n    console.log(this.props.state);\n    const open_appointments = this.props.appointments.filter(appointment => appointment.establishment_id == this.props.establishment).sort(dateSort);\n    console.log(\"Appointments Container:\");\n    console.log(open_appointments);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Appointments, {\n      current_user: this.props.current_user,\n      open_appointments: open_appointments,\n      requestDate: this.props.requestDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    establishments: state.establishments,\n    loading: state.loading,\n    current_user: state.current_user,\n    appointments: state.appointments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAppointments: () => dispatch(fetchAppointments()),\n    requestDate: props => dispatch(requestDate(props))\n  };\n};\n\nfunction dateSort(a, b) {\n  const dateA = a.when;\n  const dateB = b.when;\n  let comparison = 0;\n\n  if (dateA > dateB) {\n    comparison = 1;\n  } else if (dateA < dateB) {\n    comparison = -1;\n  }\n\n  return comparison;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer);","map":{"version":3,"sources":["/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js"],"names":["React","Component","connect","fetchAppointments","Appointments","requestDate","AppointmentContainer","componentDidMount","props","componentDidUpdate","render","console","log","state","open_appointments","appointments","filter","appointment","establishment_id","establishment","sort","dateSort","current_user","mapStateToProps","establishments","loading","mapDispatchToProps","dispatch","a","b","dateA","when","dateB","comparison"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,oBAAN,SAAmCL,SAAnC,CAA6C;AAGzCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,iBAAX;AAEH;;AAEDM,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,KAAL,CAAWL,iBAAX;AACH;;AAGDO,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,UAAMC,iBAAiB,GAAG,KAAKN,KAAL,CAAWO,YAAX,CAAwBC,MAAxB,CAA+BC,WAAW,IAAIA,WAAW,CAACC,gBAAZ,IAAgC,KAAKV,KAAL,CAAWW,aAAzF,EAAwGC,IAAxG,CAA6GC,QAA7G,CAA1B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,iBAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAI,KAAKN,KAAL,CAAWc,YAAzC;AAAuD,MAAA,iBAAiB,EAAIR,iBAA5E;AAA+F,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWH,WAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAIH;;AAtBwC;;AAyB7C,MAAMkB,eAAe,GAAGV,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,cAAc,EAAEX,KAAK,CAACW,cADnB;AAEHC,IAAAA,OAAO,EAAEZ,KAAK,CAACY,OAFZ;AAGHH,IAAAA,YAAY,EAAET,KAAK,CAACS,YAHjB;AAIHP,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAJjB,GAAP;AAMH,CAPD;;AAUA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,iBAAiB,EAAE,MAAMwB,QAAQ,CAACxB,iBAAiB,EAAlB,CAD9B;AAEHE,IAAAA,WAAW,EAAGG,KAAD,IAAWmB,QAAQ,CAACtB,WAAW,CAACG,KAAD,CAAZ;AAF7B,GAAP;AAIH,CALD;;AAOA,SAASa,QAAT,CAAkBO,CAAlB,EAAqBC,CAArB,EAAwB;AAEpB,QAAMC,KAAK,GAAGF,CAAC,CAACG,IAAhB;AACA,QAAMC,KAAK,GAAGH,CAAC,CAACE,IAAhB;AAEA,MAAIE,UAAU,GAAG,CAAjB;;AACA,MAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACjBC,IAAAA,UAAU,GAAG,CAAb;AACD,GAFD,MAEO,IAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACxBC,IAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,SAAOA,UAAP;AAEH;;AAED,eAAe/B,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,oBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { fetchAppointments } from '../actions/fetchAppointments'\nimport Appointments from '../components/appointments/Appointments'\nimport { requestDate } from '../actions/requestDate' \n\nclass AppointmentContainer extends Component {\n\n \n    componentDidMount() {\n        this.props.fetchAppointments()\n\n    }\n\n    componentDidUpdate(){\n        this.props.fetchAppointments()\n    }\n\n\n    render() {\n        console.log(this.props.state)\n        const open_appointments = this.props.appointments.filter(appointment => appointment.establishment_id == this.props.establishment).sort(dateSort)\n        console.log(\"Appointments Container:\")\n        console.log(open_appointments)\n        return (\n            <div>\n                <Appointments current_user = {this.props.current_user} open_appointments = {open_appointments} requestDate={this.props.requestDate}/>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        establishments: state.establishments,\n        loading: state.loading,\n        current_user: state.current_user,\n        appointments: state.appointments\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAppointments: () => dispatch(fetchAppointments()),\n        requestDate: (props) => dispatch(requestDate(props))\n    }\n}\n\nfunction dateSort(a, b) {\n\n    const dateA = a.when;\n    const dateB = b.when;\n\n    let comparison = 0;\n    if (dateA > dateB) {\n      comparison = 1;\n    } else if (dateA < dateB) {\n      comparison = -1;\n    }\n    return comparison;\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer)"]},"metadata":{},"sourceType":"module"}