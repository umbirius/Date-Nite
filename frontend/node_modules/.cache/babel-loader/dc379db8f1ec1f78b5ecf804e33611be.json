{"ast":null,"code":"var _jsxFileName = \"/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/components/sessions/LogIn.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newUser } from '../actions/newUser';\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      redirect: false\n    };\n\n    this.handleOnChange = event => {\n      switch (event.target.id) {\n        case \"username\":\n          this.setState({\n            username: event.target.value\n          });\n          break;\n\n        default:\n          this.setState({\n            username: ''\n          });\n      }\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      let user = this.state;\n      this.props.newUser(user);\n      this.setState({\n        redirect: true\n      }); // window.location = '/dash';\n      // can use 'refs' on various inputs to refer to the data from a submit\n      // this.refs.commentForm.reset()\n    };\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center-app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: event => this.handleOnSubmit(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        onChange: event => this.handleOnChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Log In\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    current_user: state.current_user,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  newUser: props => dispatch(newUser(props))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/components/sessions/LogIn.js"],"names":["React","Component","Redirect","connect","newUser","LogIn","state","username","redirect","handleOnChange","event","target","id","setState","value","handleOnSubmit","preventDefault","user","props","render","mapStateToProps","users","current_user","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAGA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAElB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFkB;;AAAA,SAO1BC,cAP0B,GAOTC,KAAK,IAAI;AACtB,cAAQA,KAAK,CAACC,MAAN,CAAaC,EAArB;AACI,aAAK,UAAL;AACI,eAAKC,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAEG,KAAK,CAACC,MAAN,CAAaG;AADb,WAAd;AAGA;;AAEJ;AACI,eAAKD,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAE;AADA,WAAd;AARR;AAaH,KArByB;;AAAA,SAwB1BQ,cAxB0B,GAwBTL,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,UAAIC,IAAI,GAAG,KAAKX,KAAhB;AACA,WAAKY,KAAL,CAAWd,OAAX,CAAmBa,IAAnB;AACA,WAAKJ,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAE;AADA,OAAd,EAJsB,CAOtB;AACA;AACA;AACH,KAlCyB;AAAA;;AAoC1BW,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKb,KAAL,CAAWE,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AAEH,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,QAAQ,EAAGE,KAAD,IAAW,KAAKK,cAAL,CAAoBL,KAApB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,UAFP;AAGI,QAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKD,cAAL,CAAoBC,KAApB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAOI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CADJ;AAaH;AACJ;;AAxDyB;;AA2D9B,MAAMU,eAAe,GAAGd,KAAK,IAAI;AAC7B,SAAO;AACHe,IAAAA,KAAK,EAAEf,KAAK,CAACe,KADV;AAEHC,IAAAA,YAAY,EAAEhB,KAAK,CAACgB,YAFjB;AAGHC,IAAAA,OAAO,EAAEjB,KAAK,CAACiB;AAHZ,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,OAAO,EAAEc,KAAK,IAAIO,QAAQ,CAACrB,OAAO,CAACc,KAAD,CAAR;AADU,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newUser } from '../actions/newUser'\n\n\nclass LogIn extends Component {\n\n    state = {\n        username: '',\n        redirect: false\n    }\n\n    handleOnChange = event => {\n        switch (event.target.id) {\n            case \"username\":\n                this.setState({\n                    username: event.target.value,\n                })\n                break\n\n            default:\n                this.setState({\n                    username: ''\n                })\n        }\n\n    }\n\n\n    handleOnSubmit = event => {\n        event.preventDefault()\n        let user = this.state\n        this.props.newUser(user)\n        this.setState({\n            redirect: true\n        })\n        // window.location = '/dash';\n        // can use 'refs' on various inputs to refer to the data from a submit\n        // this.refs.commentForm.reset()\n    }\n\n    render() {\n\n        if (this.state.redirect === true) {\n            return <Redirect to=\"/dash\" />\n        } else {\n\n            return (\n                <div className=\"center-app\">\n                    <form onSubmit={(event) => this.handleOnSubmit(event)}>\n                        <label>Username:</label>\n                        <input\n                            type='text'\n                            id='username'\n                            onChange={(event) => this.handleOnChange(event)}\n                        />\n                        <input type=\"submit\" value=\"Log In\"></input>\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users,\n        current_user: state.current_user,\n        loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    newUser: props => dispatch(newUser(props))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)"]},"metadata":{},"sourceType":"module"}