{"ast":null,"code":"var _jsxFileName = \"/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAppointments } from '../actions/fetchAppointments';\nimport Appointments from '../components/appointments/Appointments';\nimport { requestDate } from '../actions/requestDate';\n\nclass AppointmentContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAppointments();\n  }\n\n  render() {\n    debugger;\n    console.log(this.props.state);\n    let open_appointments = this.props.appointments.filter(appointment => appointment.establishment_id == this.props.establishment && appointment.status == false);\n    console.log(\"Appointments Container:\");\n    console.log(open_appointments);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Appointments, {\n      current_user: this.props.current_user,\n      open_appointments: open_appointments,\n      requestDate: this.props.requestDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    establishments: state.establishments,\n    loading: state.loading,\n    current_user: state.current_user,\n    appointments: state.appointments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAppointments: () => dispatch(fetchAppointments()),\n    requestDate: props => dispatch(requestDate(props))\n  };\n}; // function dateSort(a, b) {\n//     const dateA = a.when;\n//     const dateB = b.when;\n//     let comparison = 0;\n//     if (dateA > dateB) {\n//       comparison = 1;\n//     } else if (dateA < dateB) {\n//       comparison = -1;\n//     }\n//     return comparison;\n// }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer);","map":{"version":3,"sources":["/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js"],"names":["React","Component","connect","fetchAppointments","Appointments","requestDate","AppointmentContainer","componentDidMount","props","render","console","log","state","open_appointments","appointments","filter","appointment","establishment_id","establishment","status","current_user","mapStateToProps","establishments","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,oBAAN,SAAmCL,SAAnC,CAA6C;AAGzCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,iBAAX;AAEH;;AAIDM,EAAAA,MAAM,GAAG;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,KAAvB;AACA,QAAIC,iBAAiB,GAAG,KAAKL,KAAL,CAAWM,YAAX,CAAwBC,MAAxB,CAA+BC,WAAW,IAAIA,WAAW,CAACC,gBAAZ,IAAgC,KAAKT,KAAL,CAAWU,aAA3C,IAA4DF,WAAW,CAACG,MAAZ,IAAsB,KAAhI,CAAxB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,iBAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAI,KAAKL,KAAL,CAAWY,YAAzC;AAAuD,MAAA,iBAAiB,EAAIP,iBAA5E;AAA+F,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWH,WAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAIH;;AApBwC;;AAuB7C,MAAMgB,eAAe,GAAGT,KAAK,IAAI;AAC7B,SAAO;AACHU,IAAAA,cAAc,EAAEV,KAAK,CAACU,cADnB;AAEHC,IAAAA,OAAO,EAAEX,KAAK,CAACW,OAFZ;AAGHH,IAAAA,YAAY,EAAER,KAAK,CAACQ,YAHjB;AAIHN,IAAAA,YAAY,EAAEF,KAAK,CAACE;AAJjB,GAAP;AAMH,CAPD;;AAUA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHtB,IAAAA,iBAAiB,EAAE,MAAMsB,QAAQ,CAACtB,iBAAiB,EAAlB,CAD9B;AAEHE,IAAAA,WAAW,EAAGG,KAAD,IAAWiB,QAAQ,CAACpB,WAAW,CAACG,KAAD,CAAZ;AAF7B,GAAP;AAIH,CALD,C,CAOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeN,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,oBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { fetchAppointments } from '../actions/fetchAppointments'\nimport Appointments from '../components/appointments/Appointments'\nimport { requestDate } from '../actions/requestDate' \n\nclass AppointmentContainer extends Component {\n\n \n    componentDidMount() {\n        this.props.fetchAppointments()\n\n    }\n\n\n\n    render() {\n        debugger\n        console.log(this.props.state)\n        let open_appointments = this.props.appointments.filter(appointment => appointment.establishment_id == this.props.establishment && appointment.status == false)\n        console.log(\"Appointments Container:\")\n        console.log(open_appointments)\n        return (\n            <div>\n                <Appointments current_user = {this.props.current_user} open_appointments = {open_appointments} requestDate={this.props.requestDate}/>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        establishments: state.establishments,\n        loading: state.loading,\n        current_user: state.current_user,\n        appointments: state.appointments\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAppointments: () => dispatch(fetchAppointments()),\n        requestDate: (props) => dispatch(requestDate(props))\n    }\n}\n\n// function dateSort(a, b) {\n\n//     const dateA = a.when;\n//     const dateB = b.when;\n\n//     let comparison = 0;\n//     if (dateA > dateB) {\n//       comparison = 1;\n//     } else if (dateA < dateB) {\n//       comparison = -1;\n//     }\n//     return comparison;\n\n// }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer)"]},"metadata":{},"sourceType":"module"}