{"ast":null,"code":"var _jsxFileName = \"/Users/umbertopalazzo/Dev/Date-Nite/frontend/src/containers/MatchContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Matches from '../components/matches/Matches';\nimport { cancelAppointment } from '../actions/cancelAppointment';\nimport { fetchAppointments } from '../actions/fetchAppointments';\nimport { fetchEstablishments } from '../actions/fetchEstablishments';\n\nclass MatchContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.fetchAppointments();\n      this.props.fetchEstablishments();\n    };\n  }\n\n  render() {\n    const matches = this.props.appointments.filter(apt => (apt.user_id_one == this.props.current_user.id || apt.user_id_two == this.props.current_user.id) && apt.status == true).sort(dateSort);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Matches, {\n      establishments: this.props.establishments,\n      matches: matches,\n      current_user: this.props.current_user,\n      cancelAppointment: this.props.cancelAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  establishments: state.establishments,\n  loading: state.loading,\n  current_user: state.current_user,\n  appointments: state.appointments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  cancelAppointment: props => dispatch(cancelAppointment(props)),\n  fetchAppointments: () => dispatch(fetchAppointments()),\n  fetchEstablishments: () => dispatch(fetchEstablishments())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchContainer);\n\nfunction dateSort(a, b) {\n  const dateA = a.when;\n  const dateB = b.when;\n  let comparison = 0;\n\n  if (dateA > dateB) {\n    comparison = 1;\n  } else if (dateA < dateB) {\n    comparison = -1;\n  }\n\n  return comparison;\n}","map":{"version":3,"sources":["/Users/umbertopalazzo/Dev/Date-Nite/frontend/src/containers/MatchContainer.js"],"names":["React","Component","connect","Matches","cancelAppointment","fetchAppointments","fetchEstablishments","MatchContainer","componentDidMount","props","render","matches","appointments","filter","apt","user_id_one","current_user","id","user_id_two","status","sort","dateSort","establishments","mapStateToProps","state","loading","mapDispatchToProps","dispatch","a","b","dateA","when","dateB","comparison"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,mBAAT,QAAoC,gCAApC;;AAIA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCO,iBAFmC,GAEf,MAAM;AACtB,WAAKC,KAAL,CAAWJ,iBAAX;AACA,WAAKI,KAAL,CAAWH,mBAAX;AACH,KALkC;AAAA;;AAOnCI,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,MAAxB,CAA+BC,GAAG,IAAI,CAACA,GAAG,CAACC,WAAJ,IAAmB,KAAKN,KAAL,CAAWO,YAAX,CAAwBC,EAA3C,IAAiDH,GAAG,CAACI,WAAJ,IAAmB,KAAKT,KAAL,CAAWO,YAAX,CAAwBC,EAA7F,KAC/CH,GAAG,CAACK,MAAJ,IAAc,IADL,EACWC,IADX,CACgBC,QADhB,CAAhB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWa,cAApC;AAAoD,MAAA,OAAO,EAAEX,OAA7D;AAAsE,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWO,YAA/F;AAA6G,MAAA,iBAAiB,EAAE,KAAKP,KAAL,CAAWL,iBAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAhBkC;;AAqBvC,MAAMmB,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,cAAc,EAAEE,KAAK,CAACF,cADU;AAEhCG,EAAAA,OAAO,EAAED,KAAK,CAACC,OAFiB;AAGhCT,EAAAA,YAAY,EAAEQ,KAAK,CAACR,YAHY;AAIhCJ,EAAAA,YAAY,EAAEY,KAAK,CAACZ;AAJY,CAAZ,CAAxB;;AAOA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAGK,KAAD,IAAWkB,QAAQ,CAACvB,iBAAiB,CAACK,KAAD,CAAlB,CADF;AAEpCJ,EAAAA,iBAAiB,EAAE,MAAMsB,QAAQ,CAACtB,iBAAiB,EAAlB,CAFG;AAGpCC,EAAAA,mBAAmB,EAAE,MAAMqB,QAAQ,CAACrB,mBAAmB,EAApB;AAHC,CAAL,CAAnC;;AAMA,eAAeJ,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,cAA7C,CAAf;;AAEA,SAASc,QAAT,CAAkBO,CAAlB,EAAqBC,CAArB,EAAwB;AAEpB,QAAMC,KAAK,GAAGF,CAAC,CAACG,IAAhB;AACA,QAAMC,KAAK,GAAGH,CAAC,CAACE,IAAhB;AAEA,MAAIE,UAAU,GAAG,CAAjB;;AACA,MAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACfC,IAAAA,UAAU,GAAG,CAAb;AACH,GAFD,MAEO,IAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACtBC,IAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,SAAOA,UAAP;AAEH","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Matches from '../components/matches/Matches'\nimport { cancelAppointment } from '../actions/cancelAppointment'\nimport { fetchAppointments } from '../actions/fetchAppointments'\nimport { fetchEstablishments } from '../actions/fetchEstablishments'\n\n\n\nclass MatchContainer extends Component {\n\n    componentDidMount = () => {\n        this.props.fetchAppointments()\n        this.props.fetchEstablishments()\n    }\n\n    render() {\n        const matches = this.props.appointments.filter(apt => (apt.user_id_one == this.props.current_user.id || apt.user_id_two == this.props.current_user.id)\n            && apt.status == true).sort(dateSort)\n\n        return (\n            <div className=\"center-app\">\n                <Matches establishments={this.props.establishments} matches={matches} current_user={this.props.current_user} cancelAppointment={this.props.cancelAppointment} />\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    establishments: state.establishments,\n    loading: state.loading,\n    current_user: state.current_user,\n    appointments: state.appointments\n})\n\nconst mapDispatchToProps = dispatch => ({\n    cancelAppointment: (props) => dispatch(cancelAppointment(props)),\n    fetchAppointments: () => dispatch(fetchAppointments()),\n    fetchEstablishments: () => dispatch(fetchEstablishments())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchContainer)\n\nfunction dateSort(a, b) {\n\n    const dateA = a.when;\n    const dateB = b.when;\n\n    let comparison = 0;\n    if (dateA > dateB) {\n        comparison = 1;\n    } else if (dateA < dateB) {\n        comparison = -1;\n    }\n    return comparison;\n\n}"]},"metadata":{},"sourceType":"module"}