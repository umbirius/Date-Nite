{"ast":null,"code":"var _jsxFileName = \"/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js\";\nimport React, { Component } from 'react'; // import Establishments from '../components/establishments/Establishments'\n\nimport { connect } from 'react-redux';\nimport { fetchAppointments } from '../actions/fetchAppointments';\n\nclass AppointmentContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open_appointments: this.props.appointments.filter(appointment => appointment.establishment_id === this.props.establishment)\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAppointments();\n  }\n\n  render() {\n    debugger;\n    console.log(\"Appointments Container:\");\n    console.log(this.props.appointments);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Appointment Container\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    establishments: state.establishments,\n    loading: state.loading,\n    current_user: state.current_user,\n    appointments: state.appointments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAppointments: () => dispatch(fetchAppointments())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer);","map":{"version":3,"sources":["/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/containers/AppointmentContainer.js"],"names":["React","Component","connect","fetchAppointments","AppointmentContainer","state","open_appointments","props","appointments","filter","appointment","establishment_id","establishment","componentDidMount","render","console","log","mapStateToProps","establishments","loading","current_user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCI,KAFyC,GAEjC;AACJC,MAAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+BC,WAAW,IAAIA,WAAW,CAACC,gBAAZ,KAAiC,KAAKJ,KAAL,CAAWK,aAA1F;AADf,KAFiC;AAAA;;AAOzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWJ,iBAAX;AACH;;AAGDW,EAAAA,MAAM,GAAG;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,YAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAIH;;AApBwC;;AAuB7C,MAAMS,eAAe,GAAGZ,KAAK,IAAI;AAC7B,SAAO;AACHa,IAAAA,cAAc,EAAEb,KAAK,CAACa,cADnB;AAEHC,IAAAA,OAAO,EAAEd,KAAK,CAACc,OAFZ;AAGHC,IAAAA,YAAY,EAAEf,KAAK,CAACe,YAHjB;AAIHZ,IAAAA,YAAY,EAAEH,KAAK,CAACG;AAJjB,GAAP;AAMH,CAPD;;AAUA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHnB,IAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAACnB,iBAAiB,EAAlB;AAD9B,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,oBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\n// import Establishments from '../components/establishments/Establishments'\n\nimport { connect } from 'react-redux'\nimport { fetchAppointments } from '../actions/fetchAppointments'\n\nclass AppointmentContainer extends Component {\n\n    state = {\n        open_appointments: this.props.appointments.filter(appointment => appointment.establishment_id === this.props.establishment)\n    }\n\n\n    componentDidMount() {\n        this.props.fetchAppointments()\n    }\n\n\n    render() {\n        debugger\n        console.log(\"Appointments Container:\")\n        console.log(this.props.appointments)\n        return (\n            <div>\n                Appointment Container\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        establishments: state.establishments,\n        loading: state.loading,\n        current_user: state.current_user,\n        appointments: state.appointments\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAppointments: () => dispatch(fetchAppointments())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer)"]},"metadata":{},"sourceType":"module"}