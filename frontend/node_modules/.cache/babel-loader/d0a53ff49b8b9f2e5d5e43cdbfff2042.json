{"ast":null,"code":"export function cancelAppointment(props) {\n  const configDate = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user_id: props.current_user.id,\n      appointment_id: props.id,\n      cancel: props.cancel\n    })\n  };\n  return dispatch => {\n    dispatch({\n      type: 'LOAD_REQUEST'\n    });\n    fetch(`http://localhost:3001/appointments/${props.id}`, configDate).then(response => response.json()).then(apt => {\n      return dispatch({\n        type: 'UPDATE_APPOINTMENT',\n        appointment: apt.data.attributes\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/umbertopalazzo/Development/code/redux-final-project/frontend/src/actions/cancelAppointment.js"],"names":["cancelAppointment","props","configDate","method","headers","body","JSON","stringify","user_id","current_user","id","appointment_id","cancel","dispatch","type","fetch","then","response","json","apt","appointment","data","attributes"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAAiC;AAGpC,QAAMC,UAAU,GAAG;AACfC,IAAAA,MAAM,EAAE,OADO;AAEfC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFM;AAKfC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACQC,MAAAA,OAAO,EAAEP,KAAK,CAACQ,YAAN,CAAmBC,EADpC;AAEQC,MAAAA,cAAc,EAAEV,KAAK,CAACS,EAF9B;AAGQE,MAAAA,MAAM,EAAEX,KAAK,CAACW;AAHtB,KADE;AALS,GAAnB;AAcA,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAE,sCAAqCd,KAAK,CAACS,EAAG,EAAhD,EAAmDR,UAAnD,CAAL,CACKc,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,GAAG,IAAI;AACT,aAAON,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,oBAAR;AAA8BM,QAAAA,WAAW,EAAED,GAAG,CAACE,IAAJ,CAASC;AAApD,OAAD,CAAf;AACH,KAJL;AAKH,GAPD;AAQH","sourcesContent":["export function cancelAppointment(props){\n\n\n    const configDate = {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(\n            {\n                    user_id: props.current_user.id,\n                    appointment_id: props.id,\n                    cancel: props.cancel\n            }\n        )\n    }\n\n    return (dispatch) => {\n        dispatch({ type: 'LOAD_REQUEST' })\n        fetch(`http://localhost:3001/appointments/${props.id}`, configDate)\n            .then(response => response.json())\n            .then(apt => {   \n                return dispatch({ type: 'UPDATE_APPOINTMENT', appointment: apt.data.attributes })\n            })\n    };\n}\n"]},"metadata":{},"sourceType":"module"}